@page "/"

@inject ILogger<Index> Logger

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<h3>Upload Files</h3>

<p>
    <label>
        Max file size in MB:
        <input type="number" @bind="maxFileSize" />
    </label>
</p>

<p>
    <label>
        Max allowed files:
        <input type="number" @bind="maxAllowedFiles" />
    </label>
</p>

<p>
    <label>
        Upload up to @maxAllowedFiles of up to @maxFileSize MB:
        <InputFile OnChange="@LoadFiles" multiple />
    </label>
</p>

@if (isLoading)
{
    <p>Uploading...</p>
}
else
{
    @foreach (var file in loadedFiles)
    {
        <ul>
            <li>Name: @file.Name</li>
            <li>Last modified: @file.LastModified.ToString()</li>
            <li>Size (bytes): @file.Size</li>
            <li>Content type: @file.ContentType</li>
        </ul>
        <br />
    }
}

@code {
    private List<IBrowserFile> loadedFiles = new();
    private long maxFileSize = 1;
    private int maxAllowedFiles = 3;
    private bool isLoading;

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        isLoading = true;
        loadedFiles.Clear();

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            if (file.Size > (maxFileSize * 1024 * 1024))
            {
                continue;
            }

            try
            {
                loadedFiles.Add(file);

                var path = Path.Combine(@"C:\Temp",
                        file.Name);

                await using FileStream fs = new(path, FileMode.Create);
                await file.OpenReadStream(maxFileSize * 1024 * 1024).CopyToAsync(fs);
            }
            catch (Exception ex)
            {
                Logger.LogError("File: {Filename} Error: {Error}",
                    file.Name, ex.Message);
            }
        }

        isLoading = false;
    }
}